"use strict";define(["modules/chartDataFormate"],function(d){return{radar:function(e){var i,n=this,l=this.initData(e),s={legend:{show:!1,data:[]},grid:{},radar:{shape:"circle",radius:80,name:{fontSize:12,formatter:function(e,r){return r.name},rich:{valueStyle:{fontSize:20,align:"center"}}},indicator:[],splitArea:{show:!0,areaStyle:{color:["rgba(255,255,255,0)","rgba(255,255,255,0)"]}},axisLine:{lineStyle:{type:"dashed",color:this.colors[0]}},splitLine:{lineStyle:{color:this.colors[0],width:1}}},series:[{type:"radar",symbolSize:8}]},c=[{symbol:"none",itemStyle:{normal:{lineStyle:{}}},areaStyle:{normal:{color:this.colors[0],opacity:.8}}},{symbol:"none",itemStyle:{normal:{lineStyle:{}}},areaStyle:{normal:{color:this.colors[2],opacity:.8}}}],r=(i=e,function(){var e=d.FormateGroupData(l,"radar",i.stack),r=e.series,a=e.category,t=e.indicator;_.forEach(r,function(e,r){_.merge(e,c[r]),console.log(e)});var o={legend:{data:a},radar:{indicator:t},series:[{data:r}]};_.merge(s,o),console.log(s),n.renderChart(s),n._next()});return this.tasks.push(r),this}}});